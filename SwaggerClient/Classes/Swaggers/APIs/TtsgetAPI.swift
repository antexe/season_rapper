//
// TtsgetAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



open class TtsgetAPI: APIBase {
    /**
     音声合成
     
     - parameter username: (query) user name 
     - parameter password: (query) password 
     - parameter text: (query) text 
     - parameter speakerName: (query) speaker name 
     - parameter ext: (query) ext 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func ttsGet(username: String, password: String, text: String, speakerName: String, ext: String, completion: @escaping ((_ data: Data?,_ error: Error?) -> Void)) {
        ttsGetWithRequestBuilder(username: username, password: password, text: text, speakerName: speakerName, ext: ext).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     音声合成
     - GET /ttsget.php
     - 音声合成
     - examples: [{contentType=application/json, example=""}]
     
     - parameter username: (query) user name 
     - parameter password: (query) password 
     - parameter text: (query) text 
     - parameter speakerName: (query) speaker name 
     - parameter ext: (query) ext 

     - returns: RequestBuilder<Data> 
     */
    open class func ttsGetWithRequestBuilder(username: String, password: String, text: String, speakerName: String, ext: String) -> RequestBuilder<Data> {
        let path = "/ttsget.php"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "username": username, 
            "password": password, 
            "text": text, 
            "speaker_name": speakerName, 
            "ext": ext
        ])
        

        let requestBuilder: RequestBuilder<Data>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
